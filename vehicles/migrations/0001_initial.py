# Generated by Django 3.2.2 on 2021-09-30 13:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('map', '0001_initial'),
        ('core', '0011_pagelike'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='code')),
                ('name', models.CharField(max_length=50, verbose_name='area')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='start_date')),
                ('end_date', models.DateTimeField(verbose_name='end_date')),
                ('driving_license_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driving_license_photoes', to='core.image', verbose_name='تصویر گواهینامه')),
                ('medical_license_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medical_license_photoes', to='core.image', verbose_name='تصویر کارت بهداشت')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('vehicle_type', models.CharField(choices=[('وانت', 'وانت'), ('سواری', 'سواری'), ('اتوبوس', 'اتوبوس'), ('تاکسی', 'تاکسی'), ('گریدر', 'گریدر'), ('لودر', 'لودر'), ('تریلی', 'تریلی'), ('کانتینر', 'کانتینر'), ('سپراتور', 'سپراتور'), ('خاور', 'خاور')], default='سواری', max_length=50, verbose_name='نوع وسیله ')),
                ('brand', models.CharField(choices=[('تویوتا', 'تویوتا'), ('بنز', 'بنز'), ('ایسوزو', 'ایسوزو'), ('اسکانیا', 'اسکانیا'), ('ولوو', 'ولوو'), ('کاترپیلار', 'کاترپیلار'), ('هیوندای', 'هیوندای'), ('هووو', 'هووو'), ('دانگ فنگ', 'دانگ فنگ'), ('سایپا', 'سایپا'), ('ایران خودرو', 'ایران خودرو'), ('XCMG', 'XCMG')], default='تویوتا', max_length=50, verbose_name='برند')),
                ('model_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('color', models.CharField(choices=[('سفید', 'سفید'), ('سیاه', 'سیاه'), ('نوک مدادی', 'نوک مدادی'), ('دلفینی', 'دلفینی'), ('بژ', 'بژ'), ('قرمز', 'قرمز')], default='سفید', max_length=50, verbose_name='رنگ')),
                ('year', models.IntegerField(default=2012, verbose_name='سال تولید')),
                ('plaque', models.CharField(blank=True, max_length=50, null=True, verbose_name='پلاک')),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='مالک')),
                ('driver', models.CharField(blank=True, max_length=50, null=True, verbose_name='راننده')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date_added')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date_updated')),
                ('kilometer', models.IntegerField(default=0, verbose_name='کیلومتر')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='توضیحات')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehiclePage',
            fields=[
                ('basicpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basicpage')),
            ],
            bases=('core.basicpage',),
        ),
        migrations.CreateModel(
            name='VehicleEvent',
            fields=[
                ('vehiclepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicles.vehiclepage')),
                ('event_time', models.DateTimeField(verbose_name='event_time')),
                ('kilometer', models.IntegerField(blank=True, null=True, verbose_name='کارکرد')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle', verbose_name='ماشین')),
            ],
            options={
                'verbose_name': 'VehicleEvent',
                'verbose_name_plural': 'VehicleEvents',
            },
            bases=('vehicles.vehiclepage',),
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='start_time')),
                ('end_time', models.DateTimeField(verbose_name='end_date')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='توضیحات')),
                ('income', models.IntegerField(default=0, verbose_name='درآمد')),
                ('outcome', models.IntegerField(default=0, verbose_name='هزینه')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.area', verbose_name='area')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.driver', verbose_name='driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle', verbose_name='vehicle')),
            ],
            options={
                'verbose_name': 'WorkShift',
                'verbose_name_plural': 'WorkShifts',
            },
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date_added')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.location', verbose_name='location')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle', verbose_name='ماشین')),
            ],
            options={
                'verbose_name': 'VehicleLocation',
                'verbose_name_plural': 'VehicleLocations',
            },
        ),
        migrations.CreateModel(
            name='ServiceMan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام تعمیرگاه')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='address')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='tel')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'ServiceMan',
                'verbose_name_plural': 'ServiceMans',
            },
        ),
        migrations.CreateModel(
            name='VehicleWorkEvent',
            fields=[
                ('vehicleevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicles.vehicleevent')),
                ('event_type', models.CharField(choices=[('لاستیک پنچر', 'لاستیک پنچر'), ('شیشه شکسته', 'شیشه شکسته'), ('خسارت مالی', 'خسارت مالی'), ('خسارت جانی', 'خسارت جانی')], max_length=50, verbose_name='event_type')),
                ('work_shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.workshift', verbose_name='work_shift')),
            ],
            options={
                'verbose_name': 'VehicleWorkEvent',
                'verbose_name_plural': 'VehicleWorkEvents',
            },
            bases=('vehicles.vehicleevent',),
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('vehicleevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicles.vehicleevent')),
                ('maintenance_type', models.CharField(choices=[('شستشو', 'شستشو'), ('آب رادیات جدید', 'آب رادیات جدید'), ('سوخت جدید', 'سوخت جدید'), ('تعمیر موتور', 'تعمیر موتور'), ('تعمیر گیربکس', 'تعمیر گیربکس'), ('بیمه جدید', 'بیمه جدید'), ('لاستیک جدید', 'لاستیک جدید'), ('زنجیر جدید', 'زنجیر جدید'), ('شیشه جدید', 'شیشه جدید'), ('تعویض روغن', 'تعویض روغن'), ('فیلتر هوای جدید', 'فیلتر هوای جدید'), ('فیلتر روغن جدید', 'فیلتر روغن جدید')], max_length=50, verbose_name='سرویس')),
                ('paid', models.IntegerField(verbose_name='هزینه به تومان')),
                ('service_man', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicles.serviceman', verbose_name='سرویس کار')),
            ],
            options={
                'verbose_name': 'Maintenance',
                'verbose_name_plural': 'Maintenances',
            },
            bases=('vehicles.vehicleevent',),
        ),
    ]
